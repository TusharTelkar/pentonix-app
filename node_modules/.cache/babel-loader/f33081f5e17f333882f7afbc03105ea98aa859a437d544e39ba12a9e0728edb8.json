{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TUSHAR TELKAR\\\\Desktop\\\\Pentonix\\\\pentonix-app\\\\src\\\\components\\\\Dashboard.jsx\";\nimport React, { use } from \"react\";\nimport { Navbar } from \"./Navbar\";\nimport DataTable from './DataTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Dashboard = () => {\n  var _s = $RefreshSig$();\n  const DashboardPage = () => {\n    _s();\n    const [searchQuery, setSearchQuery] = useState('');\n    const [selectedFilter, setSelectedFilter] = useState('all');\n    const [filteredData, setFilteredData] = useState([]);\n\n    // Your data array (replace with your actual data)\n    const data = [{\n      id: 1,\n      name: 'Ram',\n      email: 'ram@example.com',\n      password: 'ram123'\n    }, {\n      id: 2,\n      name: 'Shyam',\n      email: 'shyam@example.com',\n      password: 'shyam123'\n    }];\n\n    // Function to handle search input changes\n    const handleSearchInputChange = event => {\n      const query = event.target.value;\n      setSearchQuery(query);\n\n      // Filter the data based on the search query and selected filter\n      const filteredResults = data.filter(item => (selectedFilter === 'all' || item.category === selectedFilter) && item.name.toLowerCase().includes(query.toLowerCase()));\n      setFilteredData(filteredResults);\n    };\n\n    // Function to handle filter selection changes\n    const handleFilterChange = event => {\n      const filterValue = event.target.value;\n      setSelectedFilter(filterValue);\n\n      // Filter the data based on the search query and selected filter\n      const filteredResults = data.filter(item => (filterValue === 'all' || item.category === filterValue) && item.name.toLowerCase().includes(searchQuery.toLowerCase()));\n      setFilteredData(filteredResults);\n    };\n\n    // Define filter options (replace with your options)\n    const filterOptions = ['all', 'id', 'name', 'email'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        onSearchInputChange: handleSearchInputChange,\n        filterOptions: filterOptions,\n        onFilterChange: handleFilterChange,\n        selectedFilter: selectedFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n        data: searchQuery ? filteredData : data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this);\n  };\n  _s(DashboardPage, \"XaoxNTRL/YvRpaFMxXt6V9xOMlw=\");\n};\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","use","Navbar","DataTable","jsxDEV","_jsxDEV","Dashboard","_s","$RefreshSig$","DashboardPage","searchQuery","setSearchQuery","useState","selectedFilter","setSelectedFilter","filteredData","setFilteredData","data","id","name","email","password","handleSearchInputChange","event","query","target","value","filteredResults","filter","item","category","toLowerCase","includes","handleFilterChange","filterValue","filterOptions","children","onSearchInputChange","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/TUSHAR TELKAR/Desktop/Pentonix/pentonix-app/src/components/Dashboard.jsx"],"sourcesContent":["import React, {use} from \"react\";\r\nimport { Navbar } from \"./Navbar\";\r\nimport DataTable from './DataTable';\r\nexport const Dashboard = () => {\r\n\r\n  const DashboardPage = () => {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [selectedFilter, setSelectedFilter] = useState('all');\r\n    const [filteredData, setFilteredData] = useState([]);\r\n  \r\n    // Your data array (replace with your actual data)\r\n    const data = [\r\n      {\r\n        id: 1,\r\n        name: 'Ram',\r\n        email: 'ram@example.com',\r\n        password: 'ram123',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Shyam',\r\n        email: 'shyam@example.com',\r\n        password: 'shyam123',\r\n      }\r\n    ];\r\n  \r\n    // Function to handle search input changes\r\n    const handleSearchInputChange = (event) => {\r\n      const query = event.target.value;\r\n      setSearchQuery(query);\r\n  \r\n      // Filter the data based on the search query and selected filter\r\n      const filteredResults = data.filter((item) =>\r\n        (selectedFilter === 'all' || item.category === selectedFilter) &&\r\n        item.name.toLowerCase().includes(query.toLowerCase())\r\n      );\r\n  \r\n      setFilteredData(filteredResults);\r\n    };\r\n  \r\n    // Function to handle filter selection changes\r\n    const handleFilterChange = (event) => {\r\n      const filterValue = event.target.value;\r\n      setSelectedFilter(filterValue);\r\n  \r\n      // Filter the data based on the search query and selected filter\r\n      const filteredResults = data.filter((item) =>\r\n        (filterValue === 'all' || item.category === filterValue) &&\r\n        item.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n  \r\n      setFilteredData(filteredResults);\r\n    };\r\n  \r\n    // Define filter options (replace with your options)\r\n    const filterOptions = ['all', 'id','name','email'];\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n      onSearchInputChange={handleSearchInputChange}\r\n      filterOptions={filterOptions}\r\n      onFilterChange={handleFilterChange}\r\n      selectedFilter={selectedFilter}\r\n      />\r\n      <h2>Dashboard</h2>\r\n      <DataTable data={searchQuery ? filteredData : data} />\r\n    </div>\r\n  );\r\n}};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}